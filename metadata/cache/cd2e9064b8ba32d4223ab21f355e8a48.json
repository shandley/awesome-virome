{
  "cache_date": "2025-08-01T08:51:51.439626",
  "data": "<p align=\"center\"><img src=\"static/insa/logo_insaflu_new.png\" alt=\"INSaFLU\" width=\"300\"></p>\n\n[![License: GPL v2](https://img.shields.io/badge/License-GPL%20v2-blue.svg)](https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)\n\n\n**INSaFLU-TELEVIR platform (https://insaflu.insa.pt) is a free bioinformatics web-based (but also locally installable) suite that deals with primary sequencing data (Illumina, Ion Torrent and Oxford Nanopore Technologies reads) towards:**\n\n   -\t**metagenomics virus detection** (from reads to virus detection) \n\n   -\t**routine genomic surveillance** (from reads to mutations detection, consensus generation, virus classification, alignments, \u201cgenotype-phenotype\u201d screening, phylogenetics, integrative Nextstrain phylogeographical and temporal analysis etc). \n\n**INSaFLU-TELEVIR versatility and functionality is expected to supply public health laboratories and researchers with a user-oriented \u201cstart-to-end\u201d bioinformatics framework that can potentiate a strengthened and timely detection and monitoring of viral (emerging) threats.**\n\n\n\n<p align=\"center\"><img src=\"static/insa/main_modules.png\" alt=\"INSaFLU\" width=\"800\"></p>\n\n- **Online tool:** https://insaflu.insa.pt\n- **Documentation / Tutorial:** https://insaflu.readthedocs.io/en/latest/\n- **Code:** https://github.com/INSaFLU/INSaFLU\n- **Easy local installation:** https://github.com/INSaFLU/docker\n\n\n\n## How to cite\n\nIf you use INSaFLU in your work, please cite Borges V, Pinheiro M et al. Genome Medicine (2018) 10:46, [https://doi.org/10.1186/s13073-018-0555-0](https://doi.org/10.1186/s13073-018-0555-0)\n\n# Bioinformatics pipeline\n\n## Main contributors\nMiguel Pinheiro, Jo\u00e3o Dourado Santos, Daniel Sobral, Vitor Borges \n\n# Installation\n\nFor an easy and rapid installation using docker see here [https://github.com/INSaFLU/docker](https://github.com/INSaFLU/docker).\n\nThis installation is oriented for Ubuntu Server 16.04 and Centos 7.X.\nThere are several steps and packages to install, so, please, be patient. First, it is necessary to install and configure all bioinformatics software, then the database, batch-queuing system and, finally, the web site.\n\nThe user \"flu_user\" is used in all operations and it is going to be the user to run the apache web server.\n\n## General packages\n\n###Some general packages to install in Ubuntu 18.04: \n\n```\n$ sudo apt install binutils libproj-dev gdal-bin dos2unix parallel\n$ sudo apt install postgresql-10\n$ sudo apt install postgresql-10-postgis-2.4\n$ sudo apt install postgresql-10-postgis-scripts\n$ sudo apt install python3\n$ sudo apt install libdatetime-perl libxml-simple-perl libdigest-md5-perl git default-jre bioperl\n```\n\n###Some general packages to install in Centos 7.X: \n\n```\n$ sudo yum install gdal gdal-devel dos2unix parallel\n$ sudo yum install postgis-10\n$ sudo yum install postgresql-devel\n$ sudo yum install python3\n$ sudo yum install perl-Time-Piece perl-XML-Simple perl-Digest-MD5 git java perl-CPAN perl-Module-Build\n$ sudo cpan -i Bio::Perl\n# sudo yum install https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.7.1/ncbi-blast-2.7.1+-1.x86_64.rpm\n\n```\n\n:warning: Important, must be blast 2.7.1 version because of Abricate. Newer versions fails on database creation.\n\n## Bioinformatics software\n\nThe software can be installed in this directory \"/usr/local/software/insaflu\". If you choose other directory it is necessary to edit the file \"constants/software_names.py\" and set the variable \"DIR_SOFTWARE\".\n \n```\n$ sudo mkdir -p /usr/local/software/insaflu\n$ sudo chown flu_user:flu_user /usr/local/software/insaflu\n```\n\nSoftware to install:\n\n* [IGVTools](https://software.broadinstitute.org/software/igv/igvtools) 2.3.98\n* [SPAdes](http://cab.spbu.ru/software/spades/) 3.11.1\n* [Abricate](https://github.com/tseemann/abricate) 0.8-dev\n* [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) 0.11.9\n* [Trimmomatic](http://www.usadellab.org/cms/?page=trimmomatic) 0.27\n* [Bamtools](https://github.com/pezmaster31/bamtools) 2.5\n* [Prokka](https://github.com/tseemann/prokka) 1.12\n* [Mauve](http://darlinglab.org/mauve/mauve.html) 2.4.0, Feb 13 2015\n* [Mafft](https://mafft.cbrc.jp/alignment/software/) 7.313\n* [seqret](http://emboss.sourceforge.net/download/) (EMBOSS) 6.6.0.0\n* [FastTreeDbl](http://www.microbesonline.org/fasttree/) 2.1.10 Double precision\n* [freebayes](https://github.com/ekg/freebayes) v1.1.0-54-g49413aa - Also need some scripts available in freebays\n* [Snippy](https://github.com/tseemann/snippy) 3.2-dev\n\t* samtools 1.3\n\t* bgzip 1.3\n\t* tabix 1.3\n\t* snpEff 4.1l - Important, it's necessary to use this version. Recent versions have a problem when variants involve more than one base.\n\t* freebayes v1.1.0-54-g49413aa\n\t\t\nSome scripts to install:\n\n* [convertAlignment.pl](https://github.com/lskatz/lyve-SET/blob/master/scripts/convertAlignment.pl) \n\t* this script need to be installed in <SoftwareNames.DIR_SOFTWARE>/scripts/convertAlignment.pl\n* [Fastq-tools](https://github.com/dcjones/fastq-tools) 0.8\t\n\n:warning: Important, edit fastqc file `$ vi <install software path>/FastQC/0.11.9/FastQC/fastqc` and change the line `my $memory = 250 * $threads;` to `my $memory = 1000 * $threads;`\n\n:warning: Important, copy the file `bin/snippy-vcf_to_tab` to `bin/snippy-vcf_to_tab_add_freq` and do this change:\n\n```\n$ cd /usr/local/software/insaflu/snippy/bin\n$ cp snippy-vcf_to_tab snippy-vcf_to_tab_add_freq\n$ vi snippy-vcf_to_tab_add_freq\n\nand change the line 57 from:\nprint join(\"\\t\", qw(CHROM POS TYPE REF ALT EVIDENCE), @ANNO), \"\\n\";\nto\nprint join(\"\\t\", qw(CHROM POS TYPE REF ALT FREQ), @ANNO), \"\\n\";\n```\n\n:warning: Important, change shebang in spades.py file from `#!/usr/bin/env python` to `#!/usr/bin/env python3`. \n\n:warning: Important, change snippy script to allow snpEff 4.1 version\n\n\t#xpto@brazil:/usr/local/software/insaflu/snippy/bin$ diff snippy snippy~\n\t90c90\n\t< parse_version( 'snpEff -version',     4.1, qr/(\\d+\\.\\d+)/           );\n\t---\n\t> parse_version( 'snpEff -version',     4.3, qr/(\\d+\\.\\d+)/           );\n\t\n## Database PostgreSQL\n\n\t* postgresql 10.X\n\t\t* create a database and a user. Then reflect these names in \".env\" file in root path of web site.\n\n## Sun Grid Engine/Open Grid Engine\n\n\tSoftware:\n\t* gzip\n\t* [Sun Grid Engine/Open Grid Engine](https://arc.liv.ac.uk/downloads/SGE/releases)\n\t\t* [download 8.1.9 version](https://arc.liv.ac.uk/downloads/SGE/releases/8.1.9/sge_8.1.9.tar.xz)\n\t\t* queues that will be created:\n\t\t\t* all.q - generic queue\n\t\t\t* fast.q - to run quick process\n\t\t\t* queue_1.q and queue_2.q - to run slow process\n\n\nInstall SGE/OGE tips\n \n```\n$ sudo groupadd -g 58 gridware\n$ sudo useradd -u 63 -g 58 -d /opt/sge sgeadmin\n$ cd ~\n$ mkdir sge; cd sge\n$ wget https://arc.liv.ac.uk/downloads/SGE/releases/8.1.9/sge_8.1.9.tar.xz\n$ tar -xJvf sge_8.1.9.tar.xz\n$ cd sge-8.1.9/source\n$ scripts/bootstrap.sh\n\n### centos version\n$ sudo yum install hwloc-devel openssl-devel pam-devel libXt-devel motif motif-devel readline-devel\n### ubuntu\n$ sudo apt-get install libhwloc-dev libssl-dev\n\n$ ./aimk -no-java -no-jni\n\n### caveat in last command if something like this `ed.screen.c:(.text+0x247c): undefined reference to `tputs'` appears in the screen\n$ cd 3rdparty/qtcsh/LINUXAMD64\n    Add  \"-lreadline -lncurses\" to the end of command that fails\n$ cd ../../..\n$ ./aimk -no-java -no-jni\n### end caveat\n\n$ sudo su\n# export SGE_ROOT=/opt/sge\n# scripts/distinst -local -allall -noexit\n# chown -R sgeadmin:gridware /opt/sge\n# cd $SGE_ROOT\n# ./install_qmaster\n# . /opt/sge/default/common/settings.sh\n# ./install_execd\n\n### create a file to set the environment variables to SGE\n$ sudo vi /etc/profile.d/sun-grid-engine.sh\n## add the follow line to the file\n . /opt/sge/default/common/settings.sh\n```\n\n\nConfigure queues\n\nGo to the folder `example_script_sge_add_queue` and change second line in the files `\"grid_add_all_hosts.txt\"` and replace 'brazil' to your computer name. Mine is 'brazil'\n\nGet your computer name:\n\n```\n$ uname -a\nLinux brazil 4.15.0-50-generic #54-Ubuntu SMP Mon May 6 18:46:08 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n```\n\n\nAdd your name to manage list, to obtain permissions to change SGE configurations:\n\n```\n$ sudo qconf -am <your name>\n```\n\n:warning: If you get an error about `qconf not found` or `SGE_ROOT not set`, do something like this:\n\n```\n### this need to be improved\n$ sudo locate settings.sh\n$ sudo chmod a+x /opt/sge/default/common/settings.sh\n$ /opt/sge/default/common/settings.sh\n$ env | grep sge\n$ sudo su\n# PATH=   ##### /opt/sge/bin:/opt/sge/bin/lx-amd64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin ### the path from last env\n# SGE_ROOT=  ### /opt/sge   ### the path from last env\n# export SGE_ROOT;\n# qconf -am <your name>\n```\n\n\nThen run:\n\n```\n$ cd example_script_sge_add_queue\n$ qconf -Ahgrp grid_add_all_hosts.txt\n```\n\nShow all groups:\n\n```\n$ qconf -shgrpl\n$ qconf -shgrp_resolved @allhosts\nbrazil\n```\n\nIf you want to delete a group name:\n\n```\n$ qconf -dhgrp <a group name>\n```\n\nTo add the queues:\n\n```\n$ qconf -Aq grid_add_queue_all.txt\n$ qconf -Aq grid_add_queue_fast.txt\n$ qconf -Aq grid_add_queue_queue_1.txt\n$ qconf -Aq grid_add_queue_queue_2.txt\n```\n\nIf you want to delete a queue:\n\n```\n$ qconf -dq <a queue name>\n```\n\nShow all info\n\n```\n$ qconf -sq <queue name>\n```\n\nEdit queues. If you want to change slots change the number in 'slots'.\n\n```\n$ qconf -mq <queue name> \n```\n\nChange the default `schedule_interval` from `0:0:15` to `0:0:5`. This setting specifies how often the scheduler checks for new jobs.\n\n```\n$ qconf -msconf\n```\n\nAfter the OGE/SGE configuration you need to have these queue names in your system.\n\n```\n$ qstat -f\nqueuename                      qtype resv/used/tot. load_avg arch          states\n---------------------------------------------------------------------------------\nall.q@brazil               BIP   0/0/2          1.19     lx26-amd64    \n---------------------------------------------------------------------------------\nfast.q@brazil              BIP   0/0/1          1.19     lx26-amd64        \n---------------------------------------------------------------------------------\nqueue_1.q@brazil           BIP   0/0/1          1.19     lx26-amd64    \n---------------------------------------------------------------------------------\nqueue_2.q@brazil           BIP   0/0/1          1.19     lx26-amd64 \n```\n\n:warning: `brazil` is the name of the computer where the installation is. You have other certainly. The computer name need to be in `/etc/hosts` with the IP address and not with `localhost` to SGE work properly.\nExample:\n\n```\n$ cat /etc/hosts\n127.0.0.1\tlocalhost\n::1     ip6-localhost ip6-loopback\n\n192.168.1.14\tbrazil\n```\n\nOf course you have a different IP address from '192.168.1.14'\n\nMore [help to configure queues](https://peteris.rocks/blog/sun-grid-engine-installation-on-ubuntu-server/). \n\n## INSaFLU website\n\n\n```\n\n$ sudo mkdir -p /usr/local/web_site\n$ sudo mkdir -p /var/log/insaFlu\n$ sudo chown flu_user:flu_user /usr/local/web_site\n$ sudo chown flu_user:flu_user /var/log/insaFlu\n$ cd /usr/local/web_site\n$ git clone https://github.com/INSaFLU/INSaFLU.git\n$ cd INSaFLU\n$ sudo pip3 install -r requirements.txt\n$ cp .env_model .env\n```\n\nEdit the file \".env\" and config all variables. Define also a backend to the email. I have defined a posix server. \n\nTo create the database\n\n```\n$ python3 manage.py migrate\n```\n\nTo create a super user, it is going to be the administrator user account\n\n```\n$ python3 manage.py createsuperuser\n```\n\nTo join all files, in \"static_all\" path, that is necessary to run the web site and then read default databases. All data that belong to databases are in \"<insaflu path>/static_all/db/...\"\n\n```\n$ python3 manage.py collectstatic\n$ python3 manage.py load_default_files\n\n```\n\n\n\nTest if all bioinformatic tolls are installed  \n\n```\n$ cd /usr/local/web_site\n$ python3 manage.py test constants.tests_software_names\n\n```\n\nTest everything\n\n```\n$ cd /usr/local/web_site\n$ python3 manage.py test\n\n```\n\n:warning: All tests must pass otherwise something is not working properly.\n\nIf all tests passed you can test immediately it is working:\n\n```\n$ cd /usr/local/web_site\n$ python3 manage.py runserver\n```\n\nGo to your internet explorer and write the ip of the computer where the web site is installed \"<ip server>:8000\". If it is in same computer can be \"localhost:8000\".\nIf it is working let's go to install in a Apache web server. If you prefer, can be in a Nginx web server too.\n \n\n## Apache web server\n\n###Config apache2 in Centos 7.X:\n\n\nAdd `flu_user` to the `apache` group and add `insaflu.conf` to apache2.\n\n```\n$ sudo usermod -a -G flu_user apache\n$ sudo vi /etc/httpd/conf.d/insaflu.conf\n\n<VirtualHost *:80>\n\n\t# General setup for the virtual host, inherited from global configuration\n\n\tServerName insaflu.pt\n\n        Alias /media /usr/local/web_site/INSaFLU/media\n        Alias /static /usr/local/web_site/INSaFLU/static_all\n        <Directory \"/usr/local/web_site/INSaFLU/static_all\">\n                Require all granted\n        </Directory>\n        <Directory \"/usr/local/web_site/media\">\n                Options FollowSymLinks\n                AllowOverride None\n                Require all granted\n        </Directory>\n\n        #### for log files\n        <Directory \"/var/log/insaFlu\">\n                Require all granted\n        </Directory>\n\n        <Directory \"/usr/local/web_site/INSaFLU/fluwebvirus\">\n            <Files \"wsgi.py\">\n                Require all granted\n            </Files>\n        </Directory>\n\t\n\tWSGIDaemonProcess flu_user.insa.pt user=flu_user group=flu_user python-path=/usr/local/web_site/INSaFLU/fluwebvirus;/usr/lib/python3.<minor version of your python>/site-packages\n        WSGIProcessGroup flu_user.insa.pt\n        WSGIScriptAlias / /usr/local/web_site/INSaFLU/fluwebvirus/wsgi.py\n\n# Use separate log files for the SSL virtual host; note that LogLevel\n# is not inherited from httpd.conf.\nErrorLog /var/log/httpd/insaflu_error.log\nTransferLog /var/log/httpd/insaflu_transfer.log\nLogLevel warn\n\n</VirtualHost> \n\n$ sudo yum install httpd-devel mod_wsgi\n$ sudo updatedb\n\n## START small caveat...\n$ mv /etc/httpd/modules/mod_wsgi.so /etc/httpd/\n\nOR\n$ locate mod_wsgi.so \n$ sudo ln -s <last hit for the locate> /etc/httpd/modules/mod_wsgi.so\n## END small caveat...\n\n$ sudo systemctl restart httpd\n$ sudo systemctl status httpd\n```\n\n###Config apache2 in Ubuntu 16.X:\n\nAdd `flu_user` to the `apache` group and add `insaflu.conf` to apache2.\n\n```\n$ sudo usermod -a -G flu_user apache\n$ sudo apt install libapache2-mod-wsgi-py3\n$ sudo vi /etc/apache2/sites-available/insaflu.conf\n\n<VirtualHost *:80>\n\n\t# General setup for the virtual host, inherited from global configuration\n\n\tServerName insaflu.pt\n\n        Alias /media /usr/local/web_site/media\n        Alias /static /usr/local/web_site/static_all\n        <Directory \"/usr/local/web_site/static_all\">\n                Require all granted\n        </Directory>\n        <Directory \"/usr/local/web_site/media\">\n                Options FollowSymLinks\n                AllowOverride None\n                Require all granted\n        </Directory>\n\n        #### for log files\n        <Directory \"/var/log/insaFlu\">\n                Require all granted\n        </Directory>\n\n        <Directory \"/usr/local/web_site/insaflu\">\n            <Files \"wsgi.py\">\n                Require all granted\n            </Files>\n        </Directory>\n\t\n\tWSGIDaemonProcess flu_user.insa.pt user=flu_user group=flu_user python-path=/usr/local/web_site/insaflu;/usr/lib/python3.<minor version of your python>/site-packages\n\tWSGIProcessGroup flu_user.insa.pt\n\tWSGIScriptAlias / /usr/local/web_site/insaflu/wsgi.py\n\n# Use separate log files for the SSL virtual host; note that LogLevel\n# is not inherited from httpd.conf.\nErrorLog /var/log/apache2/insaflu_error.log\nTransferLog /var/log/apache2/insaflu_transfer.log\nLogLevel warn\n\n\n</VirtualHost> \n\n$ sudo a2ensite insaflu.conf\n$ sudo systemctl restart apache2\n$ sudo systemctl status apache2\n```\n\n\n:warning:  Add \"AddType application/octet-stream .bam\" to httpd.conf in \"IfModule mime_module\" element, for the IGV viewer.\n\n## Create users without access to INSaFLU web page\n\nGo to your internet explorer and put this address `http://127.0.0.1:80/admin/`\nMake the authentication with your superuser credentials and in `AUTHENTICATION AND AUTHORIZATION` you can create new accounts. \n\n## Remove files from file system removed by the user on web site\n\nYou can remove the original fastq.gz files from system because they are not used anymore. The Trimmomatic result fastq files are the ones that are going to be used. \nYou can can also remove files that belong to the samples, references, uploaded in batch and project samples that were deleted in web site by the users.\nThis operation will save several GB in your hard drives. \n\n:warning:By default, only files with 10 days after been removed in web site will be removed in file system. \n:warning:The original fastq.gz files will be removed after 10 days of being processed by Trimmomatic. \n\nTo identify the files that can be removed:\n\n```\n$ cd <where your INSaFLU is installed>\n$ python3 manage.py run_remove_files --only_identify_files true\n```\nA log file will be created with this information in `/var/log/insaflu/remove_files.log`\n\nTo remove the files permanently from file system:\n:warning: The files can't be recovered.\n\n```\n$ cd <where your INSaFLU is installed>\n$ python3 manage.py run_remove_files --only_identify_files false\n```\n\nTip:\n\nYou can create a cron job to run this task every week.\n"
}