{
  "cache_date": "2025-08-01T12:47:13.982963",
  "data": "Modified version of resfinder to allow for batch processing\nUse of run_batch_resfinder.py is the same as run_resfinder.py but instead of \npassing a single FASTA file using the ifa parameter an entire directory of FASTA files \ncan be passed using the ifd parameter.\n- Zack Whedbee\n\n\nResFinder documentation\n=============\n\nResFinder identifies acquired antimicrobial resistance genes in total or partial\nsequenced isolates of bacteria.\n\n## Content of the repository\n1. run_resfinder.py - Use this script to run ResFinder\n2. tests/data       - Contains fasta and fastq data for testing. More information in the \"Test data\" section\n3. scripts/         - All scripts in this directory is unsupported but has been uploaded as they may be useful\n4. cge/             - ResFinder code\n5. dockerfile       - Used to build ResFinder docker image (See Docker section near the end)\n\n## Installation\nThe installation described here will first install the actual ResFinder software,\nthen the dependencies, and finally the databases. A more detailed breakdown of the\ninstallation is provided below:\n\n1. Install ResFinder tool\n2. Install python modules\n3. Install BLAST (optional)\n4. install KMA (optional)\n5. Download ResFinder database\n6. Download PointFinder database\n7. Index databases with KMA (if installed)\n8. Test installation\n\nA small script has been written to automate this process. It is available from the\nscripts directory and is named install_resfinder.sh. It is very simple and might\nnot work in all environments. It is only meant as a supplement and no support will\nbe provided for any scripts in this directory. However, specific suggestions (with code)\nfor improvement is very welcome.\n\n### ResFinder tool\nSetting up ResFinder script and database\n```bash\n# Go to wanted location for resfinder\ncd /path/to/some/dir\n\n# Clone the latest version and enter the resfinder directory\ngit clone https://git@bitbucket.org/genomicepidemiology/resfinder.git\ncd resfinder\n\n```\n\n### Dependencies:\nDepending on how you plan to run ResFinder BLAST and KMA can be optional.\nBLAST is used to analyse assemblies (ie. FASTA files).\nKMA is used to analyse read data (ie. FASTQ files).\n\n#### Python modules: Tabulate, BioPython, CGECore and Python-Git\nTo install the needed python modules you can use pip\n```bash\npip3 install tabulate biopython cgecore gitpython python-dateutil\n```\nFor more information visit the respective website\n```url\nhttps://bitbucket.org/astanin/python-tabulate\nhttps://biopython.org\nhttps://bitbucket.org/genomicepidemiology/cge_core_module\nhttps://gitpython.readthedocs.io/en/stable/index.html\n```\n\n#### BLAST (optional)\nIf you don't want to specify the path of blastn every time you run\nResFinder, make sure that blastn is in you PATH.\n\nBlastn can be obtained from:\n```url\nftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/\n```\n\n#### KMA (optional)\nThe instructions here will install KMA in the default location ResFinder uses. KMA\ncan be installed in another location but the path to KMA will then need to be\nspecified every time you run ResFinder unless you add the kma program to your PATH.\n```bash\n# Go to the directoy in which you installed the ResFinder tool\ncd /path/to/some/dir/resfinder\ncd cge\ngit clone https://bitbucket.org/genomicepidemiology/kma.git\ncd kma && make\n```\n\n### Databases\nThis section describes how to install the databases at the ResFinder default locations.\nThe database locations can be changed, but must then be specified to ResFinder at run time.\n\n#### ResFinder database\n```bash\n# Go to the directoy in which you installed the ResFinder tool\ncd /path/to/some/dir/resfinder\ngit clone https://git@bitbucket.org/genomicepidemiology/resfinder_db.git db_resfinder\n```\n\n#### PointFinder database\n```bash\n# Go to the directoy in which you installed the ResFinder tool\ncd /path/to/some/dir/resfinder\ngit clone https://git@bitbucket.org/genomicepidemiology/pointfinder_db.git db_pointfinder\n```\n\n#### Indexing databases with KMA\nIf you have KMA installed you either need to have the kma_index in your PATH or\nyou need to provide the path to kma_index to INSTALL.py\n\n**NOTE**: The documentation given here describes the procedure for the ResFinder database, but the procedure is identical for the PointFinder database.\n**PointFinder database documentation**: [https://bitbucket.org/genomicepidemiology/pointfinder_db]\n\n##### a) Run INSTALL.py in interactive mode\n```bash\n# Go to the database directory\ncd path/to/db_resfinder\npython3 INSTALL.py\n```\nIf kma_index was found in your path a lot of indexing information will be\nprinted to your terminal, and will end with the word \"done\".\n\nIf kma_index wasn't found you will recieve the following output:\n```bash\nKMA index program, kma_index, does not exist or is not executable\nPlease input path to executable kma_index program or choose one of the options below:\n\t1. Install KMA using make, index db, then remove KMA.\n\t2. Exit\n```\nYou can now write the path to kma_index and finish with <enter> or you can\nenter \"1\" or \"2\" and finish with <enter>.\n\nIf \"1\" is chosen, the script will attempt to install kma in your systems\ndefault temporary location. If the installation is successful it will proceed\nto index your database, when finished it will delete the kma installation again.\n\n##### b) Run INSTALL.py in non_interactive mode\n```bash\n# Go to the database directory\ncd path/to/resfinder_db\npython3 INSTALL.py /path/to/kma_index non_interactive\n```\nThe path to kma_index can be omitted if it exists in PATH or if the script\nshould attempt to do an automatic temporary installation of KMA.\n\n##### c) Index database manually (not recommended)\nIt is possible to index the databases manually, but is generally not recommended\nas it is more prone to error. If you choose to do so, be aware of the naming of\nthe indexed files.\n\nThis is an example of how to index the ResFinder database files:\n```bash\n# Go to the resfinder database directory\ncd path/to/resfinder_db\n# create indexing directory\nmkdir kma_indexing\n# Index files using kma_index\nkma_index -i db_resfinder/fusidicacid.fsa -o db_resfinder/kma_indexing/fusidicacid\nkma_index -i db_resfinder/phenicol.fsa -o db_resfinder/kma_indexing/phenicol\nkma_index -i db_resfinder/glycopeptide.fsa -o db_resfinder/kma_indexing/glycopeptide\nkma_index -i db_resfinder/trimethoprim.fsa -o db_resfinder/kma_indexing/trimethoprim\nkma_index -i db_resfinder/oxazolidinone.fsa -o db_resfinder/kma_indexing/oxazolidinone\nkma_index -i db_resfinder/tetracycline.fsa -o db_resfinder/kma_indexing/tetracycline\nkma_index -i db_resfinder/quinolone.fsa -o db_resfinder/kma_indexing/quinolone\nkma_index -i db_resfinder/nitroimidazole.fsa -o db_resfinder/kma_indexing/nitroimidazole\nkma_index -i db_resfinder/fosfomycin.fsa -o db_resfinder/kma_indexing/fosfomycin\nkma_index -i db_resfinder/aminoglycoside.fsa -o db_resfinder/kma_indexing/aminoglycoside\nkma_index -i db_resfinder/macrolide.fsa -o db_resfinder/kma_indexing/macrolide\nkma_index -i db_resfinder/sulphonamide.fsa -o db_resfinder/kma_indexing/sulphonamide\nkma_index -i db_resfinder/rifampicin.fsa -o db_resfinder/kma_indexing/rifampicin\nkma_index -i db_resfinder/colistin.fsa -o db_resfinder/kma_indexing/colistin\nkma_index -i db_resfinder/beta-lactam.fsa -o db_resfinder/kma_indexing/beta-lactam\n# Go to the pointfinder database directory\ncd path/to/pointfinder_db\n# Index files using kma_index\nkma_index -i db_pointfinder/campylobacter/*.fsa -o db_pointfinder/campylobacter/campylobacter\nkma_index -i db_pointfinder/escherichia_coli/*.fsa -o db_pointfinder/escherichia_coli/escherichia_coli\nkma_index -i db_pointfinder/enterococcus_faecalis/*.fsa -o db_pointfinder/enterococcus_faecalis/enterococcus_faecalis\nkma_index -i db_pointfinder/enterococcus_faecium/*.fsa -o db_pointfinder/enterococcus_faecium/enterococcus_faecium\nkma_index -i db_pointfinder/neisseria_gonorrhoeae/*.fsa -o db_pointfinder/neisseria_gonorrhoeae/neisseria_gonorrhoeae\nkma_index -i db_pointfinder/salmonella/*.fsa -o db_pointfinder/salmonella/salmonella\nkma_index -i db_pointfinder/mycobacterium_tuberculosis/*.fsa -o db_pointfinder/mycobacterium_tuberculosis/mycobacterium_tuberculosis\n```\n\n### Test ResFinder intallation\n(This will not function with the docker installation.)\nIf you did not install BLAST, test 1 and 3 will fail. If you did not install KMA, test 2\nand 4 will fail.\nThe 4 tests will in total take approximately take 5-60 seconds, depending on your system.\n```bash\n# Go to the directoy in which you installed the ResFinder tool\ncd /path/to/some/dir/resfinder\n\n# For seeing the unittest options for running the tests\npython3 tests/functional_tests.py -h\n\n# In case you need to point blastn or kma, or the resfinder or the pointfinder databases as they are not in the places indicated above, see the optional arguments for the test by:\npython3 tests/functional_tests.py -res_help\n\n#Which outputs:\nusage: functional_tests.py [-res_help] [-db_res DB_PATH_RES] [-b BLAST_PATH]\n                           [-k KMA_PATH] [-db_point DB_PATH_POINT]\n\nOptions:\n  -res_help, --resfinder_help\n  -db_res DB_PATH_RES, --db_path_res DB_PATH_RES\n                        Path to the databases for ResFinder\n  -b BLAST_PATH, --blastPath BLAST_PATH\n                        Path to blastn\n  -k KMA_PATH, --kmaPath KMA_PATH\n                        Path to KMA\n  -db_point DB_PATH_POINT, --db_path_point DB_PATH_POINT\n                        Path to the databases for PointFinder\n\n# Run tests\npython3 tests/functional_tests.py\n\n# Output from successful tests\n....\n----------------------------------------------------------------------\nRan 4 tests in 8.263s\n\nOK\n```\n\n### Test data\nTest data can be found in the sub-dierectory /tests/data\n\n## Usage\n\nYou can run resfinder command line using python3.\n\n**NOTE**: Species should be entered with their full scientific names (e.g. \"escherichia coli\"), using quotation marks, not case sensitive.\n          An attempt has been made to capture some deviations like \"ecoli\" and \"e.coli\", but it is far from all deviations that will be captured.\n\n\n```bash\n\n# Example of running resfinder\npython3 run_resfinder.py -o path/to/outdir -s \"Escherichia coli\" -l 0.6 -t 0.8 --acquired --point -ifq test_isolate_01_*\n\n# The program can be invoked with the -h option\nusage: run_resfinder.py [-h] [-ifa INPUTFASTA]\n                        [-ifq INPUTFASTQ [INPUTFASTQ ...]] [-scripts SCRIPTS]\n                        [-o OUT_PATH] [-b BLAST_PATH] [-k KMA_PATH]\n                        [-s SPECIES] [-l MIN_COV] [-t THRESHOLD]\n                        [-db_res DB_PATH_RES] [-db_res_kma DB_PATH_RES_KMA]\n                        [-d DATABASES] [-acq] [-c] [-db_point DB_PATH_POINT]\n                        [-g SPECIFIC_GENE [SPECIFIC_GENE ...]] [-u]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -ifa INPUTFASTA, --inputfasta INPUTFASTA\n                        Input fasta file.\n  -ifq INPUTFASTQ [INPUTFASTQ ...], --inputfastq INPUTFASTQ [INPUTFASTQ ...]\n                        Input fastq file(s). Assumed to be single-end fastq if\n                        only one file is provided, and assumed to be paired-\n                        end data if two files are provided.\n  -o OUT_PATH, --outputPath OUT_PATH\n                        All output will be stored in this directory.\n  -b BLAST_PATH, --blastPath BLAST_PATH\n                        Path to blastn\n  -k KMA_PATH, --kmaPath KMA_PATH\n                        Path to kma\n  -s SPECIES, --species SPECIES\n                        Species in the sample\n\t\t\t\t\t\tAvailable species: Campylobacter, Campylobacter jejuni, Campylobacter coli, \n\t\t\t\t\t\tEnterococcus faecalis, Enterococcus faecium, Escherichia coli, Helicobacter pylori,\n\t\t\t\t\t\tKlebsiella, Mycobacterium tuberculosis, Neisseria gonorrhoeae,\n\t\t\t\t\t\tPlasmodium falciparum, Salmonella, Salmonella enterica, Staphylococcus aureus\n\t\t\t\t\t\t-s \"Other\" can be used for metagenomic samples or samples with unknown species.\n  -db_res DB_PATH_RES, --db_path_res DB_PATH_RES\n                        Path to the databases for ResFinder\n  -db_res_kma DB_PATH_RES_KMA, --db_path_res_kma DB_PATH_RES_KMA\n                        Path to the ResFinder databases indexed with KMA.\n                        Defaults to the 'kma_indexing' directory inside the\n                        given database directory.\n  -d DATABASES, --databases DATABASES\n                        Databases chosen to search in - if none is specified\n                        all is used\n  -acq, --acquired      Run resfinder for acquired resistance genes\n\t-l MIN_COV, --min_cov MIN_COV\n\t                      Minimum (breadth-of) coverage of ResFinder\n\t\t\t\t\t\t  Valid interval: 0.00-1.00\n  -t THRESHOLD, --threshold THRESHOLD\n\t\t\t\t\t\t\t\t\t\t\t  Threshold for identity of ResFinder\n\t\t\t\t\t\t\t\t\t\t\t  Valid interval: 0.00-1.00\n  -c, --point           Run pointfinder for chromosomal mutations\n  -db_point DB_PATH_POINT, --db_path_point DB_PATH_POINT\n                        Path to the databases for PointFinder\n  -g SPECIFIC_GENE [SPECIFIC_GENE ...]\n                        Specify genes existing in the database to search for -\n                        if none is specified all genes are included in the\n                        search.\n  -u, --unknown_mut     Show all mutations found even if in unknown to the\n                        resistance database\n\t-l_p MIN_COV_POINT, --min_cov_point MIN_COV_POINT\n\t                      Minimum (breadth-of) coverage of Pointfinder. If None\n\t                      is selected, the minimum coverage of ResFinder will be\n\t                      used.\n\t-t_p THRESHOLD_POINT, --threshold_point THRESHOLD_POINT\n\t\t\t\t\t\t\t\t\t\t\t  Threshold for identity of Pointfinder. If None is\n\t\t\t\t\t\t\t\t\t\t\t  selected, the minimum coverage of ResFinder will be\n\t\t\t\t\t\t\t\t\t\t\t  used.\n\n```\n\n### Web-server\n\nA webserver implementing the methods is available at the [CGE\nwebsite](http://www.genomicepidemiology.org/) and can be found here:\nhttps://cge.cbs.dtu.dk/services/ResFinder/\n\n### Install ResFinder with Docker\nIf you would like to build a docker image with ResFinder, make sure you have cloned the ResFinder directory as well as installed and indexed the databases: `db_pointfinder` and `db_resfinder`. Then run the following commands:\n```bash\n# Go to ResFinder directory\ncd path/to/resfinder\n# Build docker image with name resfinder\ndocker build -t resfinder .\n```\nWhen running the docker make sure to mount the `db_resfinder` and the `db_pointfinder` with the flag -v, as shown in the examples below. \n\nYou can test the installation by running the docker with the test files: \n```bash\ncd path/to/resfinder/\nmkdir results\n\n# Run with raw data (this command mounts the results to the local directory \"results\")\ndocker run --rm -it -v $(pwd)/db_resfinder/:/usr/src/db_resfinder -v $(pwd)/results/:/usr/src/results resfinder -ifq /usr/src/tests/data/test_isolate_01_1.fq /usr/src/tests/data/test_isolate_01_2.fq -acq -db_res /usr/src/db_resfinder -o /usr/src/results\n\n# Run with assembled data (this command mounts the results to the local directory \"results\")\ndocker run --rm -it -v $(pwd)/db_resfinder/:/usr/src/db_resfinder  -v $(pwd)/results/:/usr/src/results resfinder -ifa /usr/src/tests/data/test_isolate_01.fa -acq -db_res /usr/src/db_resfinder -o /usr/src/results\n```\n\nCitation\n=======\n\nWhen using the method please cite:\n\nResFinder 4.0 for predictions of phenotypes from genotypes.  \nBortolaia V, Kaas RF, Ruppe E, Roberts MC, Schwarz S, Cattoir V, Philippon A, Allesoe RL, Rebelo AR, Florensa AR, Fagelhauer L,\nChakraborty T, Neumann B, Werner G, Bender JK, Stingl K, Nguyen M, Coppens J, Xavier BB, Malhotra-Kumar S, Westh H, Pinholt M,\nAnjum MF, Duggett NA, Kempf I, Nyk\ufffdsenoja S, Olkkola S, Wieczorek K, Amaro A, Clemente L, Mossong J, Losch S, Ragimbeau C, Lund O, Aarestrup FM.\nJournal of Antimicrobial Chemotherapy. 2020 Aug 11.  \nPMID: 32780112\t\t\tdoi: 10.1093/jac/dkaa345  \n[Epub ahead of print]  \n\nReferences\n=======\n\n1. Camacho C, Coulouris G, Avagyan V, Ma N, Papadopoulos J, Bealer K, Madden TL. BLAST+: architecture and applications. BMC Bioinformatics 2009; 10:421.\n2. Clausen PTLC, Aarestrup FM, Lund O. Rapid and precise alignment of raw reads against redundant databases with KMA. BMC Bioinformatics 2018; 19:307.\n\nLicense\n=======\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
}