{
  "cache_date": "2025-03-17T02:31:27.030971",
  "data": "# Plaque Size Tool User Manual\n\n[Introduction](#Introduction)\n\n[Prerequisites installation](#prerequisites-installation)\n\n- [Python installation](#python-installation)\n\n- [Pip3 installation](#pip3-installation)\n\n[Plaque Size Tool installation](#plaque-size-tool-installation)\n\n- [GitHub archive download](#github-archive-download)\n\n- [Installation using pip](#installation-using-pip)\n\n[Plaque Size Tool usage](#plaque-size-tool-usage)\n\n- [Plaque Size Tool usage options](#plaque-size-tool-usage-options)\n\n- [Single file processing](#single-file-processing)\n\n- [Examples](#examples)\n\n[Batch files processing](#batch-files-processing)\n\n- [Example](#example)\n\n[Output files](#output-files)\n\n# Introduction\n\nPlaque Size Tool is an open-source application written in Python 3 that\nis able to detect and measure bacteriophage plaques on a Petri dish\nimage.\n\nThe source files are located at\n<https://github.com/ellinium/plaque_size_tool>.\n\n**Web Google Colab version** is available here - https://colab.research.google.com/drive/1HJe8V26l7n82zX8vJ7bO5C8-xrs_aWuq?usp=sharing\n\nTo cite Plaque Size Tool, please use https://doi.org/10.1016/j.virol.2021.05.011: \n```\n\"Trofimova E, Jaschke PR. Plaque Size Tool: An automated plaque analysis tool for simplifying and standardising bacteriophage plaque morphology measurements. Virology. 2021;561(April):1\u20135. doi: 10.1016/j.virol.2021.05.011\"\n```\n\nThe tool can be installed on any operation system supporting Python.\n\nThe installation guide is provided for two most frequently used OS \u2013\nWindows and MacOS.\n\nTo execute installation commands on Mac use \u2018Terminal\u2019 or any other\ncommand line interpreter (CLI) preferred, on Windows use \u2018Command\nPrompt\u2019 (or any other CLI preferred).\n\nThe CLI screenshots taken for this manual were made on macOS High Sierra\nand Windows 10.\n\nPlaque size tool was tested on the Python versions 3.7, 3.8 and 3.9.4,\nand if you are experiencing any problems with the higher versions,\nplease send an email with the error to <ellina.trofimova@hdr.mq.edu.au>\nor create an issue at\n<https://github.com/ellinium/plaque_size_tool/issues> (requires\nregistration on GitHub).\n\n# Prerequisites installation\n\n*Python 3.6* or higher and *pip3* should be installed on the system.\n\nIt is possible to test whether they are installed on your OS by\nexecuting a command in Terminal (macOS) or Command Prompt (Windows):\n\nMacOS: execute \n```\npython3 --version\n```\n![](Manual_images/media/image1.jpg)\n  \nWindows: execute \n```\npy --version\n```\n![](Manual_images/media/image2.PNG)\n\n*pip3* should be installed on the system.\n\nPip3 is usually already installed on your system if you are using Python\n3.6 or higher.\n\nTo check whether it is installed or not, execute the command \u2018pip3\u2019 in\nyour CLI (the same command is used both for Windows and MacOS).\n\n![](Manual_images/media/image3.jpg)\n\n## Python installation\n\nIf Python3 is not found in your system, please navigate\nto\u00a0<https://www.python.org/downloads/>.\n\nOn the main page there is a link to the latest version of Python3\ndepending on your OS.\n\nMacOS:\n\n![](Manual_images/media/image4.jpg)\n\nWindows:\n\n![](Manual_images/media/image5.jpg)\n\nInstall the latest version of Python by clicking \u2018Download Python\n&lt;latest version&gt;\u2019 and running the downloaded package.\n\nThe detailed instructions for Python download and installation are also\nprovided at\u00a0<https://wiki.python.org/moin/BeginnersGuide/Download>.\n\nAfter Python installation, check that Python3 and pip3 were installed\nproperly by executing the same commands as above:\n\nMacOS:\n```\npython3 \u2013-version\n```\n```\npip3\n```\nWindows:\n```\npy \u2013-version\n```\n```\npip3\n```\n## Pip3 installation\n\nIf Python3 is installed in your system but *pip3* is missing, it is\npossible to install it separately.\n\nFor that, navigate to\u00a0<https://pip.pypa.io/en/stable/installing/>\u00a0and\nthe section **'Installing with get-pip.py'**.\n\n![](Manual_images/media/image6.jpg)\n\nExecute the following command to download get-pip.py file:\n\nMacOS: \n```\npython3 get-pip.py\n```\n\nWindows: \n```\npy get-pip.py\n```\n![](Manual_images/media/image7.jpg)\n\nIf pip3 is installed but outdated, please upgrade it by executing the\nfollowing command:\n\nMacOS: \n```\npython3 -m pip install --upgrade pip\n```\n\nWindows: \n```\npy -m pip install --upgrade pip\n```\n\n# Plaque Size Tool installation\n\n## GitHub archive download\n\nNavigate to\u00a0<https://github.com/ellinium/plaque_size_tool>. After that,\nclick the green button 'Code' in the right corner and select the option\n'Download Zip'.\n\n![](Manual_images/media/image8.jpg)\n\nThe archive called \u2018plaque\\_size\\_tool-main.zip\u2019 will be downloaded.\nUnpack the archive into the directory of your choice.\n\n&lt; OPTIONAL &gt;: If you have already installed the program git,\nanother option to download the files is to use the command:\n```\ngit clone https://github.com/ellinium/plaque_size_tool directory\n```\n, where directory is a directory for Plaque Size Tool\non a local machine.\n\n## Installation using pip\n\nNext, within Terminal (macOS) or Command Prompt (Windows) navigate to\nthe directory you unpacked the downloaded zip file into. For example, if\nyou unpacked \u2018plaque\\_size\\_tool-main.zip\u2018 into the\n\u2018/home/plaque\\_size\\_tool/ plaque\\_size\\_tool-main\u2019 directory, navigate\nto this directory. To confirm you are in the directory containing the\nplaque size tool files, type \u2018ls\u2019 on Terminal (MacOS) or \u2018dir\u2019 on\nCommand Prompt (Windows). You should see the following files listed:\n\nTest\\_plates\nLICENSE\nplaque\\_size\\_tool.py\npyproject.toml\nREADME.md\nsetup.py\n\nOnce in the directory containing plaque size tool, execute the following\ncommand which installs all required libraries for Plaque Size Tool:\n\n```\npip3 install plaque-size-tool\n```\n\nIf the pip3 command worked properly you should see something like this\non your screen:\n\n![](Manual_images/media/image9.jpg)\n\nMacOS and Windows use the same command for installation.\n\n# Plaque Size Tool usage\n\n## Plaque Size Tool usage options\n\nThe tool can be run on a single image file (TIF, TIFF, JPG, JPEG, PNG\nimage formats are supported) or on a directory containing several image\nfiles. The output of Plaque Size Tool will be placed into\u00a0a\nsub-directory called \u2018out\u2019 within the /plaque\\_size\\_tool-main\ndirectory.\n\nYou can execute the command to run Plaque Size Tool from the directory\nused in **Installation Step 3.1.** If your current directory differs,\nyou need to include a full path to the tool (see below for examples).\n\n***Input parameters:***\n\n-i to process a single image file\n\n-d to process a directory with image files\n\n-p is an optional parameter for the Petri dish size in millimetres\n\n-small an optional flag, is recommended to use when the plaques are less\nthan 2.5 mm or images are of low resolution and size\n\n## \n \n## Single File processing\n\nMacOS: \n\n```\npython3 PATH_TO_PST/plaque_size_tool.py -i PATH_TO_THE_IMAGE_FILE [-p plate_size] [-small]\n```\nWindows: \n```\npy PATH_TO_PST/plaque_size_tool.py -i PATH_TO_THE_IMAGE_FILE [-p plate_size] [-small]\n```\nWhen the tool is executed from the directory Plaque Size Tool is\ninstalled into, the PATH_TO_PST can be omitted:\n\nMacOS: \n```\npython3 plaque_size_tool.py -i PATH_TO_THE_IMAGE_FILE [-p plate_size] [-small]\n```\n\nWindows: \n```\npy plaque_size_tool.py -i PATH_TO_THE_IMAGE_FILE [-p plate_size] [-small]\n```\n\n### Examples\n\n<u>To use the following examples on Windows **\u2018python3\u2019** is required to\nbe replaced with **\u2018py\u2019**.</u>\n\nMacOS: \n```\npython3 plaque_size_tool.py -i Test_plates/large/Plate_4.tif\n```\n\u2022 runs the tool on the file Plate_4.tif located in the sub-directory\nTest_plates/large\n\n\u2022\u00a0creates two files within the /out directory called:\n\u2018data-green-Plate\\_4.csv\u2019 and \u2018out\\_Plate\\_4.tif\u2019\n\n\u2022\u00a0all results within \u2018data-green-Plate\\_4.csv\u2019 will be shown in pixels\nas the plate size is not specified.\n\nMacOS: \n```\npython3 plaque_size_tool.py -i Test_plates/large/Plate_4.tif -p 90\n```\n\u2022 runs the tool on the file Plate\\_4.tif that has a plate size 90 mm.\n\n\u2022\u00a0the results file \u2018data-green-Plate\\_4.csv\u2019 will contain measurements\nin both mm and pixels.\n\n![](Manual_images/media/image10.jpg)\n\nMacOS: \n```\npython3 plaque_size_tool.py -i Test_plates/small/Plate_16.tif -p 90 -small\n```\n\n\u2022\u00a0runs the tool on the file Plate\\_16.tif that has small plaques. The\nresults on a plate will be shown in mm.\n\n![](Manual_images/media/image11.jpg)\n\n## \n\n\u2022 If executing the tool while the current working directory (which can\nbe checked with command \u2018pwd\u2019 on MacOS, \u2018cd\u2019 on Windows) is not\n\u2018/plaque\\_size\\_tool-main\u2019 then the full path to the\n\u2018plaque\\_size\\_tool.py\u2019 file AND the image file must be specified, or an\nerror will be shown because python3 cannot find the executable file and\nimage file.\n\nMacOS: \n```\npython3 /Users/paul/plaque_size_tool-main/plaque_size_tool.py -i /Users/paul/plaque_size_tool-main/Test_plates/large/Plate_4.tif\n```\n## Batch files processing\n\nMacOS: \n```\npython3 PATH_TO_PST/plaque_size_tool.py -d PATH_TO_THE_DIRECTORY [-p plate_size] [-small]\n```\nWindows: \n```\npy PATH_TO_PST/plaque_size_tool.py -d PATH_TO_THE_DIRECTORY [-p plate_size] [-small]\n```\n### Example\n\nMacOS: \n```\npython3 plaque_size_tool.py -d Test_plates/small -p 90 -small\n```\nWindows: \n```\nWindows: py plaque_size_tool.py -d Test_plates/small -p 90 -small\n```\n\u2022\u00a0runs the tool on the directory Test\\_plates/small that contains plates\nwith small plaques (&lt;= 2.5 mm). The results on a plate will be shown\nin mm.\n\n![](Manual_images/media/image12.jpg)\n\n## Output files\n\nThe tool produces two output files in the \u2018out\u2019 sub-directory that is\ncreated automatically:\n\n**out\\_&lt;file\\_name&gt;** - an image with identified non-overlapping\nplaques circled with a green line, where &lt;file\\_name&gt; is the name\nof the original file.\n\n> If -p (plate size) parameter is specified, the results will be shown\n> in mm. If -p is not specified, then the results are shown in pixels.\n\n![](Manual_images/media/image13.jpg)\n\n\n\n**data-green-&lt;file\\_name&gt;.csv** a CSV file with detected plaques\nparameters:\n\n> INDEX\\_COL - the ID of the plaque that corresponds to the ID on the\n> output image\n>\n> AREA\\_PXL - Area of a plaque in square pixels\n>\n> AREA\\_MM2 - Area of a plaque in square millimetres if plate size is\n> specified\n>\n> DIAMETER\\_PXL - Diameter of a plaque in pixels\n>\n> DIAMETER\\_MM - Diameter of a plaque in millimetres if plate size is\n> specified\n\n![](Manual_images/media/image14.png)\n"
}