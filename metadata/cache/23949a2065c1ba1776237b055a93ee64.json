{
  "cache_date": "2025-03-17T02:21:09.581323",
  "data": "![Logo](image/logo.jpg)\n# SpikeHunter: A Deep Learning Tool for Identifying Phage Tailspike Proteins\nSpikeHunter utilizes a deep learning approach to identify phage tailspike proteins. It achieves this by using a protein language model, ESM-2 transformer, which can detect patterns in protein sequences. The PyTorch framework enables efficient processing of large datasets, making SpikeHunter a valuable tool for researchers studying phage-host interactions.\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Features](#features)\n- [Dependencies](#dependencies)\n- [License](#license)\n- [Citation](#citation)\n\n## Installation\nTo install SpikeHunter, follow these steps:\n\n1. Clone the repository:\n```\ngit clone https://github.com/nlm-irp-jianglab/SpikeHunter.git\n```\n\n2. Install the required dependencies:\n```\ncd SpikeHunter\nconda env create --file environment.yml\n# or if you have mamba installed\n# mamba env create --file environment.yml\nconda activate SpikeHunter\n```\n\n3. Download essential models\n```\n# change ESM2 path\nexport esm_folder=<your path for downloading ESM models>\npython setup.py ${esm_folder}\n# For example: \n# export esm_folder=/data/Irp-jiang/share/yyang/ESM\n# python setup.py ${esm_folder}\n\n# please go to https://figshare.com/articles/online_resource/SpikeHunter_trained_model_pth_file/23577051 to download model_best.pth and copy it to trained_model/ folder\n# Notice: Make sure config.yaml file is in the same folder with the model.\n```\n\n## Usage\n```\nusage: SpikeHunter.py [-h] [-c CONFIG] [-r RESUME] [-d DEVICE]\n\nSpikeHunter\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        config file path (default: None)\n  -r RESUME, --resume RESUME\n                        path to latest checkpoint (default: None)\n  -d DEVICE, --device DEVICE\n                        indices of GPUs to enable (default: all)\n```\n\nSimply run SpikeHunter using the following command:\n```\n# The input and output files are in folder `test/`\nexport esm_folder=<your path for downloading ESM model>\nenvsubst < template.yaml > predict.yaml\npython SpikeHunter.py -c predict.yaml -r trained_model/model_best.pth\n```\n\n## Features\n\n- Identifies tailspike proteins in phage sequences using advanced algorithms.\n- Supports analysis of multiple phage genomes in a single run.\n- Exports results in a TSV format for easy downstream analysis.\n\n## Dependencies\n\nSpikeHunter requires the following Python libraries:\n\n- Pytorch\n- Pandas\n- Numpy\n\n## License\n\nSpikeHunter is released under the [MIT License](./LICENSE).\n\n## Citation\n\nIf you use SpikeHunter in your research, please cite it as follows:\nYang Y, Dufault-Thompson K, Yan W, Cai T, Xie L, Jiang X. Deciphering Phage-Host Specificity Based on the Association of Phage Depolymerases and Bacterial Surface Glycan with Deep Learning. bioRxiv. 2023:2023-06.\n\n## Credits\n\nThis project uses code adapted from the [pytorch-template](https://github.com/victoresque/pytorch-template) repository by Victor Huang. We thank Victor Huang for providing this useful code as a starting point for our project.\n\n## FAQ\n**Q1**. What if I encounter an Error: \"torch.cuda.OutOfMemoryError: CUDA out of memory.\"?  \n**A1**: Please decrease the batch size in predict.yaml. For example, from \"batch_size: 50\" to \"batch_size: 25\". \n\n**Q2**: What if I encounter an Error from \"multiprocessing/popen_fork.py\": \"BlockingIOError: [Errno 11] Resource temporarily unavailable\"?  \n**A2**: Please decrease the number of workers in predict.yaml. For example, from \"num_workers: 30\" to \"num_workers: 8\".\n"
}