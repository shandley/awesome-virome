{
  "cache_date": "2025-11-01T08:51:03.597498",
  "data": "# PhaMers (*Pha*ge k-*mers*)\n\nThis repository contains the implementation of \"PhaMers\"- a bioinformatic\ntool for identifying bacteriophages (phages) from metagenomic sequenging data\non the basis of their k-mer frequencies. PhaMers uses basic techniques from\nsupervised machine learning with k-mer frequency vectors as a the feature\nrepresentaton. The PhaMers classificaiton algorithm is trained on k-mer\nfeature vectors from GenBank and RefSeq.\n\nThis repository also contains utilities to analyze and plot DNA sequences\nto facilitate understanding of metagenomic datasets.\n\n## Installation\nPhaMers requires Python 2.7 as well as some basic packages which\nmay be installed by running the following command\n\n    pip install -r requirements.txt\n\n## Usage\nTo score DNA sequences using PhaMers, use the following command\n\n    python scripts/phamer.py -in $input_dir -data data --debug --equalize_reference\n\nwhere the variable `$input_dir` is a path to a directory that contains a collection\nof FASTA files with sequences that will be scored. This will create a directory\ncalled `phamer_output` containing the scores in a file called `phamer_scores.csv`.\nScores range from -1 to 1 with higher scores indicating that the sequence\nis more phage-like.\n\nTo run further analysis and generate plots, run the following command\n\n    python scripts/analysis.py -in $input_dir -data data --debug\n\nwith the variable `$input_dir` as before.\n\n## Scripts\nThis repository contains quite a few different scripts, which\nare now briefly described:\n\n- phamer.py\n    - The main PhaMers scoring funcitonality is contained here. \n    This script can take in files in fasta format, count k-mers, and \n    score files against referece datasets. This script can also do t-SNE\n    on the combined datasets.\n\n- analysis.py\n    - This script integrats and presents data from PhaMers, VirSorter, and\n     IMG. This script makes t-SNE plots of metagenomics datasets, contig diagrams, \n     performance plots, and text files that summarize results.\n\n- feature_taxonomy.py\n    - A class and functions that do t-SNE and cluster points to examine \n    enrichmet for taxa.\n\n- cross_validate.py\n    - A class and functions that help to do N-Fold cross validation\n\n- kmer.py\n    - Functions for counting k-mers.\n\n- cluster.py\n    - Cluster optimization analysis.\n\n- learning.py\n    - Some functions that implement several tools useful for machine learning and some wrapper functions for Scipy ML functions.\n\n- distinguishable_colors.py\n    - Some functions for getting a set of colors that are able to be \n    distinguished from eachoter visually.\n\n- fileIO.py\n    - Some functions for getting data in and out of files that score inputs and outputs for PhaMers\n\n- id_parser.py\n    - Functions that help parse headers of different formats to turn them in to IDs.\n\n- img_parser.py\n\n    - Functions for parsing IMG output files.\n\n- basic.py\n    - Some basic utility functions that might be useful in any program\n"
}