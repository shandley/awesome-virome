{
  "cache_date": "2025-11-01T10:22:49.472446",
  "data": "# PB-LKS\n\nThis is the official code for our paper \"PB-LKS: a python package for predicting **P**hage-**B**acteria interaction through **L**ocal **K**-mer **S**trategy\"\n```\n +--------------------------------------------+\n | |---\\  |----\\       |       |  /   /----\\  |\n | |    | |     |      |       | /   |        |\n | |___/  |____/   --  |       |/\\    \\----\\  |\n | |      |     \\      |       |  \\         | |\n | |      |_____/      |_____  |   \\  \\____/  |\n +--------------------------------------------+\n```\n\n\n\n## Local environment setup\n1. install conda(to manage environment)\n2.  Change directory to the path of this project\n      ```bash\n      cd {your_path_to_PBLKS}\n      ```\n3. Run following codes in your terminal\n   ```shell\n   conda create -n PB-LKS python=3.10\n   conda deactivate (if base environment is activated)\n   conda activate PB-LKS\n   pip install -r requirements.txt\n   ``` \n\n## How to use\nBoth a command line tool and a python package is provided in this project. Developers and researchers may select according to needs after setting local environment.\n\n### Command line interface\nA command line interface is implemented and can be used by running following commands in your terminal. \n\n   ```bash\n   cd {your_path_to_PBLKS}\n   # display help message of PB-LKS CLI\n   python PB-LKS.py -h\n   # run and display result with example input\n   python PB-LKS.py -e\n   ```\nother detailed arguments and their usages are listed as follows\n```Shell\nusage: python PB-LKS.py [-h] [-p PHAGE] [-b BAC] [-e] [-xgb] [-fea] [-ba] [-o OUTPUT] [-d]\n\noptions:\n  -h, --help            show this help message and exit\n  -p PHAGE, --phage PHAGE\n                        path/folder to your phage sequence file(in fasta format)\n  -b BAC, --bac BAC     path/folder to your bacteria sequence file(in fasta format)\n  -e, --example         run model with example input and quit\n  -xgb, --xgboost       run prediction with xgboost(default model is based on RandomForest)\n  -fea, --feature       show 10 features of most importance and exit\n  -ba, --batch          run prediction in batch, -p,-b should be folder if set True\n  -o OUTPUT, --output OUTPUT\n                        the folder you want to save batch prediction results (results will be printed into terminal by default)\n\n  -d, --detail          if set true, print detailed prediction results(single prediction), including important features and decision path.\n```\n\n### python package\nTo make it more convenient for researchers and developers to use our model in more personalized tasks, a python package is also implemented. \nfollowing functions are available\n\nexample code:\n```python\nimport PBLKS\nbacteria_path = 'example1.fasta'\nphage_path = 'example2.fasta'\n# directly gives the result of prediction\nresult, prob =  PBLKS.predict(bacteria_path, phage_path)\n# gets descriptors from files\n# can be used to reconstruct or train other type of models  \nfeas = PBLKS.get_descriptor(bacteria_path, phage_path)\n\n# predicts the interaction of each bacteria-phage pair in both folder\nbac_folder = \"your_folder_path\"\nphage_folder  = \"your_folder_path\"\nout_put_dir = \"your_dest_folder\"\n# output'll be directed to dest folder, creating 2 result files\nPBLKS.predict_in_batch(bac_folder, phage_folder, output_dir=out_put_dir)\n# printing results into terminal\nPBLKS.predict_in_batch(bac_folder, phage_folder, output_dir=None)\n\n# get decision path\ndecision_path = PBLKS.show_decision_path(bacteria_path, phage_path)\n# get top 10 important features\n# result is orgnized in dict like: {kmer: importance}\nfeatures = PBLKS.show_feature_importance(top_cnt=10)\n```\n\n## decision path visualization\nInterpertability is a key feature in decision tree based alogrithms, several interfaces to visualize how our model make decisions are thus implemented. \n\nExcept calling  `-d` or `PBLKS.show_decision_path` to show decision path with 01, we implemented a script to visualize decision trees in our model.\n\nUsers can run following command in termianl\n```bash\npython make_tree_plots.py\n```\nThis'll create a detailed visualization of every decision tree into `/PBLKS/Trees`, providing a more straightforward way to visualize decision.\n\n## other models\nA xgboost based model is also included in `/models`.\n\ncan be used by adding `-xgb` argument in CLI or adding parameter `use_xgboost=True` when calling methods in our package \n\n\n## Source code\n\nVisit this git repository to get source code of PB-LKS:\n\n\thttps://github.com/wanchunnie/PB-LKS\n"
}