{
  "cache_date": "2025-03-17T03:32:36.840879",
  "data": "### _DEPRECATED_\n\nThis repo is deprecated. \n\nIf you need help finishing a project using `Cenote-Taker 2`, I will still field questions/troubleshoot (open an issue).\n\n**Otherwise:**\n\n[Please use Cenote-Taker 3](https://github.com/mtisza1/Cenote-Taker3). It's great!!\n\n\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n######### ######### ######### ######### ######### ######### ######### ######### #########\n\n\n\n\n# Cenote-Taker 2\nCenote-Taker 2 is a dual function bioinformatics tool. On the one hand, Cenote-Taker 2 can discover/predict virus sequences from any kind of genome or metagenomic assembly. On the other hand, virus sequences/genomes (perhaps predicted by another tool?) can be annotated with a variety of sequences features, genes, and taxonomy. Either the discovery or the the annotation module can be used independently.\n```diff\n+ The code is currently functional. Feel free to use Cenote-Taker 2 at will.\n+ Major update on May 6th 2022: Version 2.1.5\n+ Cenote-Taker 2.1.5 has an easier, more reliable installation and database downloads. \n+ Some packages that have given many users issues have been replaced. Taxonomy is more flexible. See release notes.\n+ \"virion\" is now default database\n```\n\nIf you just want to discover/predict virus sequences and get a report on those sequences, use [Cenote Unlimited Breadsticks](https://github.com/mtisza1/Cenote_Unlimited_Breadsticks), also provided in the Cenote-Taker 2 repo.\n\nIf you just want to annotate your virus sequences and make genome maps, run Cenote-Taker 2 using `-am True`.\n\nAn ulterior motive for creating and distributing Cenote-Taker 2 is to facilitate annotation and deposition of viral genomes into GenBank where they can be used by the scientific public.  Therefore, I hope you consider depositing the submittable outputs (.sqn) after reviewing them. I am not affiliated with GenBank. \n\nSee \"Use Cases\" below, and read the [Cenote-Taker 2 wiki](https://github.com/mtisza1/Cenote-Taker2/wiki) for useful information on using the pipeline (e.g. expected outputs) and screeds on myriad topics.\nUsing a HPC with at least 16 CPUs and 16g of dedicated memory is recommended for most runs. (Annotation of a few selected genomes or virus discovery on smaller databases can be done with less memory/CPU in a reasonable amount of time). \n\nTo update from `v2.1.3`  (note that biopython and bedtools are now required): \n```\nconda activate cenote-taker2_env\npip install phanotate\nconda install -c conda-forge -c bioconda hhsuite last=1282 seqkit\ncd Cenote-Taker2\ngit pull\n#Then update the BLAST database (see instructions below).\n```\n\nUpdate to HMM databases (hallmark genes) occurred on June 16th, 2021. Update to the BLAST (taxonomy) database occurred on May 6th, 2022. See instructions below to update your database.\n\nRead the manuscript in [Virus Evolution](https://academic.oup.com/ve/article/7/1/veaa100/6055568)\n\nIf you cannot or do not want to install and run this on the command line, `Cenote-Taker 2 v 2.1.3` is freely available to run with point-and-clink interface on the [CyVerse Discovery Environment](https://cyverse.org/discovery-environment).\n\n\n![alt text](../master/cenote-taker_logo.png)\n\n# Install Using Conda\n\n```\n\n** Databases will require between 8GB (most basic) and 75GB (all the optional databases) of storage.\n** Don't install without checking conda version first.\n** Install on machine running on Linux (with a reasonably new OS). Support for MacOS is forthcoming.\n```\n\nIf you just want a lightweight (7GB), faster, **NON-ANNOTATING** virus discovery tool, use [Cenote Unlimited Breadsticks](https://github.com/mtisza1/Cenote_Unlimited_Breadsticks). The `Unlimited Breadsticks` module is included in the Cenote-Taker 2 repo, so no need to install it if you already have `Cenote-Taker 2` (you may need to update from older versions `Cenote-Taker2`) \n\n```diff\n- ALERT *** If you choose to install all optional databases for HHsuite, \n- installation will take about 2 hours due to slow download speeds for pdb70\n- AND require about 75GB of storage space. \n```\n1. Change to the directory you'd like to be the parent to the install directory\n\n2. Ensure Conda is installed and working (required for installation and execution of `Cenote-Taker 2`). Use version 4.10 or better.\nNote: instructions for installing Conda are probably specific to your university's/organization's requirements, so it is always best to ask your IT professional or HPC administrator. Generally, you will want to install [Miniconda](https://docs.conda.io/en/latest/miniconda.html#linux-installers) in your data directory.\n```\nconda -V\n```\n3. Clone the `Cenote-Taker 2` github repo.\n\n```\ngit clone https://github.com/mtisza1/Cenote-Taker2.git\n```\n4. Install the conda environment (phanotate, last, and hhsuite don't play nice with the .yml file, so they need special commands)\n\n```\nconda env create --file cenote-taker2_env.yml\n# follow conda prompts to allow install\n\nconda activate cenote-taker2_env\n\npip install phanotate\n\nconda install -c conda-forge -c bioconda hhsuite last=1282\n```\n\n5. Change to the `Cenote-Taker2` repo directory OR a different location where you want the databases to be stored. (NOTE: if you install the databases in a custom location you will need to specify this directory each time you run the tool) Download the databases.\n\n```\nconda activate cenote-taker2_env\ncd Cenote-Taker2\n\n**choose one of the following**\n\n# with all the options (75GB). The PDB database (--hhPDB) takes about 2 hours to download.\npython update_ct2_databases.py --hmm True --protein True --rps True --taxdump True --hhCDD True --hhPFAM True --hhPDB True\n\n# substantially smaller but with some hhsuite DBs (20GB). I recommend this if you are unsure which you want.\npython update_ct2_databases.py --hmm True --protein True --rps True --taxdump True --hhCDD True --hhPFAM True\n\n# only the required DBs, No hhsuite (8GB)\npython update_ct2_databases.py --hmm True --protein True --rps True --taxdump True\n``` \n\n\n# Bioconda installation\n\n* THIS HAS NOT BEEN UPDATED RECENTLY. BIOCONDA VERSION NOT RECOMMENDED AT THE MOMENT *\n\nA user has packaged Cenote-Taker 2 in Bioconda for use by their institute.  However, installation can be done by anyone using their package with a few commands. All the above alerts, requirements, and warnings still apply. This will also require a user to have 32GB of storage in their default conda environment directory.\n\nCommands:\n```\nconda create -n cenote-taker2 -c hcc -c conda-forge -c bioconda -c defaults cenote-taker2=2020.04.01\n\nconda activate cenote-taker2\n\ndownload-db.sh\n```\n\nThe Krona database directory will then need to be manually downloaded and set up. This should work:\n```\nCT2_DIR=$PWD\nKRONA_DIR=$( which python | sed 's/bin\\/python/opt\\/krona/g' )\ncd ${KRONA_DIR}\nsh updateTaxonomy.sh\ncd ${KRONA_DIR}\nsh updateAccessions.sh\ncd ${CT2_DIR}\n```\nDiscussion:\n[LINK](https://github.com/mtisza1/Cenote-Taker2/issues/1#issuecomment-608510204)\n\n## Updating databases\n\nAs of now, the HMM database has been updated from the original (update on June 16th, 2021), and the BLAST database has been updated (May 6th, 2022). This update should only take a minute or two. Here's how you update (modify if your conda environment is different than below example):\n\n```\n# update Cenote-Taker 2 (change to main repo directory):\ngit pull\n\n# load your conda environment:\nconda activate cenote-taker2_env\n\n#change to Cenote-Taker2 directory\ncd Cenote-Taker2\n\n# run the update script:\npython update_ct2_databases.py --hmm True --protein True\n```\n\n## Schematic\n![alt text](../master/CT2_schematic_redo1.png)\n\n# Running Cenote-Taker 2\nCenote-Taker 2 currently runs in a python wrapper. \n1. Activate the Conda environment.\n\nCheck environments:\n\n`conda info --envs`\n```\n#Default:\n\nconda activate cenote-taker2_env\n\n#Or if you've put your conda environment in a custom location:\n\nconda activate /path/to/better/directory/cenote-taker2_env\n```\n2. Run the python script to get the help menu (see options below).\n\n```\n# quick help menu\npython /path/to/Cenote-Taker2/run_cenote-taker2.py\n\n# full help menu\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -h\n```\n\n3. Run some contigs. For example:\n```\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_CONTIGS.fasta -r my_contigs1_ct -m 32 -t 32 -p true -db virion\n\n#Or, if you want to save a log of the run, add  \"2>&1 | tee output.log\" to the end of the command:\n\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_CONTIGS.fasta -r my_contigs1_ct -m 32 -t 32 -p true -db virion 2>&1 | tee output.log\n```\n\n\n### Use Case Suggestions/Settings\n#### *Annotation*\n\nIf you just want to annotate your pre-selected virus sequences and make genome maps, run Cenote-Taker 2 using `-am True`.\n\nExample:\n```\n# clip and wrap circular sequences\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_VIRUSES.fasta -r viruses_am_ct -m 32 -t 32 -p False -am True\n\n# do not wrap circular sequences, but label DTR regions\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_VIRUSES.fasta -r viruses_am_ct -m 32 -t 32 -p False -am True --wrap False\n```\n\nFor very divergent genomes, setting `-hh hhsearch` will marginally improve number of genes that are annotated. This setting increasese the run time quite a bit. On the other hand, setting `-hh none` will skip the time consuming hhblits step. With this, you'll still get pretty good genome maps, and might be most appropriate for very large virus genome databases, or for runs where you just want to do a quick check.\n\n#### *Discovery + Annotation*\n\n**Virus-like particle (VLP) prep assembly:**\n\n`-p False -db standard`\n\nYou might apply a size cutoff for linear contigs as well, e.g. ` --minimum_length_linear 3000` OR `--minimum_length_linear 5000`. Changing length minima does not affect false positive rates, but short linear contigs may not be useful, depending on your goals.\n\nExample:\n```\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_VLP_ASSEMBLY.fasta -r my_VLP1_ct -m 32 -t 32 -p False -db standard --minimum_length_linear 3000\n```\n\n**Whole genome shotgun (WGS) metagenomic assembly:**\n\n`-p True -db virion --minimum_length_linear 3000 --lin_minimum_hallmark_genes 2`\n\nWhile you should definitely ***definitely*** prune virus sequences from WGS datasets, [CheckV](https://bitbucket.org/berkeleylab/checkv/src/master/) also does a very good job (I'm still formally comparing these approaches) and you could use `--prune_prophage False` on a metagenome assembly and feed the unpruned contigs from Unlimited Breadsticks into `checkv end_to_end` if you prefer. My suggestion is to prune with `Cenote-Taker 2`, then run `CheckV`.\n\nExample with prune:\n```\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_WGS_ASSEMBLY.fasta -r my_WGS1_ct -m 32 -t 32 -p True -db virion --minimum_length_linear 3000 --lin_minimum_hallmark_genes 2\n```\n\n\n**Bacterial isolate genome or MAG**\n\n`-p True -db virion --minimum_length_linear 3000 --lin_minimum_hallmark_genes 2`\n\nUsing `--lin_minimum_hallmark_genes 1 -db virion` with WGS or bacterial genome data will (in my experience) yield very few sequences that appear to be false positives, however, there are lots of \"degraded\" prophage sequences in these sequencing sets, i.e. some/most genes of the phage have been lost. That said, sequence with just 1 hallmark gene is neither a guarantee of a degraded phage (especially in the case of ssDNA viruses) nor is 2+ hallmark a guarantee of of a complete phage.\n\nExample:\n```\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_BACTERIAL_GENOME.fasta -r my_genome1_ct -m 32 -t 32 -p True -db virion --minimum_length_linear 3000 --lin_minimum_hallmark_genes 2\n```\n\n\n**RNAseq assembly of any kind (if you only want RNA viruses)**\n\n`-p False -db rna_virus`\n\nIf you also want DNA virus transcripts, or if your data is mixed RNA/DNA sequencing, you might do a run with `-db rna_virus`, then, from this run, take the file \"other_contigs/non_viral_domains_contigs.fna\" and use it as input for another run with `-db virion`.\n\nExample:\n```\npython /path/to/Cenote-Taker2/run_cenote-taker2.py -c MY_METATRANSCRIPTOME.fasta -r my_metatrans1_ct -m 32 -t 32 -p False -db rna_virus\n```\n\n## Prepare files for Vcontact2\n\n[Vcontact2](https://bitbucket.org/MAVERICLab/vcontact2/src/master/) is a popular downstream tool for clustering phage genomes into genus-level bins. Here's an example of how to prepare files from `Cenote-Taker 2`. \n\n\n```\n# change directory to a Cenote-Taker 2 output directory\n# specify summary file (name based on run title):\nls *_CONTIG_SUMMARY.tsv\nSUMMARY=\"cenote_out_CONTIG_SUMMARY.tsv\"\n# make files for VContact2\nif [ -s vcontact2_gene_to_genome1.csv ] || [ -s vcontact2_all_proteins.faa ] ; then echo \"vcontact2 files already exist. NOT overwriting.\" ; else echo \"protein_id,contig_id,keywords\" > vcontact2_gene_to_genome1.csv ; tail -n+2 $SUMMARY | cut -f2,4 | while read VIRUS END ;do if [[ \"$END\" == \"DTR\" ]] ; then AA=$( find . -type f -name \"${VIRUS}.rotate.AA.sorted.fasta\" ) ; else AA=$( find . -type f -name \"${VIRUS}.AA.sorted.fasta\" ) ; fi ; grep -F \">\" $AA | cut -d \" \" -f1 | sed 's/>//g' | while read LINE ; do echo \"${LINE},${VIRUS}\" ; done >> vcontact2_gene_to_genome1.csv ; cat $AA >> vcontact2_all_proteins.faa ; done ; fi\n```\n\n## All arguments:\n```\nusage: run_cenote-taker2.py [-h] \n                            -c ORIGINAL_CONTIGS \n                            -r RUN_TITLE \n                            -p PROPHAGE\n                            -m MEM \n                            -t CPU \n\n                            [-am ANNOTATION_MODE]\n                            [--template_file TEMPLATE_FILE] \n                            [--reads1 F_READS]\n                            [--reads2 R_READS]\n                            [--minimum_length_circular CIRC_LENGTH_CUTOFF]\n                            [--minimum_length_linear LINEAR_LENGTH_CUTOFF]\n                            [-db VIRUS_DOMAIN_DB]\n                            [--lin_minimum_hallmark_genes LIN_MINIMUM_DOMAINS]\n                            [--circ_minimum_hallmark_genes CIRC_MINIMUM_DOMAINS]\n                            [--known_strains HANDLE_KNOWNS]\n                            [--blastn_db BLASTN_DB]\n                            [--enforce_start_codon ENFORCE_START_CODON]\n                            [-hh HHSUITE_TOOL] \n                            [--crispr_file CRISPR_FILE]\n                            [--isolation_source ISOLATION_SOURCE]\n                            [--Environmental_sample ENVIRONMENTAL_SAMPLE]\n                            [--collection_date COLLECTION_DATE]\n                            [--metagenome_type METAGENOME_TYPE]\n                            [--srr_number SRR_NUMBER]\n                            [--srx_number SRX_NUMBER] \n                            [--biosample BIOSAMPLE]\n                            [--bioproject BIOPROJECT] \n                            [--assembler ASSEMBLER]\n                            [--molecule_type MOLECULE_TYPE]\n                            [--data_source DATA_SOURCE]\n                            [--filter_out_plasmids FILTER_PLASMIDS]\n                            [--scratch_directory SCRATCH_DIR]\n                            [--blastp BLASTP] \n                            [--orf-within-orf ORF_WITHIN]\n                            [--cenote-dbs CENOTE_DBS] [--wrap WRAP]\n                            [--hallmark_taxonomy HALLMARK_TAX]\n\n\nCenote-Taker 2 is a pipeline for virus discovery and thorough annotation of viral contigs and genomes. \nVisit https://github.com/mtisza1/Cenote-Taker2#use-case-suggestionssettings for suggestions about how to \nrun different data types and https://github.com/mtisza1/Cenote-Taker2/wiki to read more. Version 2.1.5\n\noptional arguments:\n\n  -h, --help            show this help message and exit\n\n\n\n REQUIRED ARGUMENTS for Cenote-Taker2 :\n\n  -c ORIGINAL_CONTIGS, --contigs ORIGINAL_CONTIGS\n\n                        Contig file with .fasta extension in fasta format - OR\n\n                        - assembly graph with .fastg extension. Each header\n\n                        must be unique before the first space character\n\n  -r RUN_TITLE, --run_title RUN_TITLE\n\n                        Name of this run. A directory of this name will be\n\n                        created. Must be unique from older runs or older run\n\n                        will be renamed. Must be less than 18 characters,\n\n                        using ONLY letters, numbers and underscores (_)\n\n  -p PROPHAGE, --prune_prophage PROPHAGE\n\n                        True or False. Attempt to identify and remove flanking\n\n                        chromosomal regions from non-circular contigs with\n\n                        viral hallmarks (True is highly recommended for\n\n                        sequenced material not enriched for viruses. Virus\n\n                        enriched samples probably should be False (you might\n\n                        check with ViromeQC). Also, please use False if\n\n                        --lin_minimum_hallmark_genes is set to 0)\n\n  -m MEM, --mem MEM     example: 56 -- Gigabytes of memory available for\n\n                        Cenote-Taker2. Typically, 16 to 32 should be used.\n\n                        Lower memory will work in theory, but could extend the\n\n                        length of the run\n\n  -t CPU, --cpu CPU     Example: 32 -- Number of CPUs available for Cenote-\n\n                        Taker2. Approximately 32 CPUs should be used\n\n                        moderately sized metagenomic assemblies. For large\n\n                        datasets, increased performance can be seen up to 120\n\n                        CPUs. Fewer than 16 CPUs will work in theory, but\n\n                        could extend the length of the run. See GitHub repo\n\n                        for suggestions.\n\n\n\n OPTIONAL ARGUMENTS for Cenote-Taker2. Most of which are important to consider!!! \n GenBank typically only accepts genome submission with ample metadata. \n See https://www.ncbi.nlm.nih.gov/Sequin/sequin.hlp.html#ModifiersPage for more information on GenBank metadata fields:\n\n  -am ANNOTATION_MODE, --annotation_mode ANNOTATION_MODE\n\n                        Default: False -- Annotate sequences only (skip\n\n                        discovery). Only use if you believe each provided\n\n                        sequence is viral\n\n  --template_file TEMPLATE_FILE\n\n                        Template file with some metadata. Real one required\n\n                        for GenBank submission. Takes a couple minutes to\n\n                        generate: https://submit.ncbi.nlm.nih.gov/genbank/temp\n\n                        late/submission/\n\n  --reads1 F_READS      Default: no_reads -- ILLUMINA READS ONLY: First Read\n\n                        file in paired read set - OR - read file in unpaired\n\n                        read set - OR - read file of interleaved reads. Used\n\n                        for coverage depth determination.\n\n  --reads2 R_READS      Default: no_reads -- ILLUMINA READS ONLY: Second Read\n\n                        file in paired read set. Disregard if not using paired\n\n                        reads. Used for coverage depth determination.\n\n  --minimum_length_circular CIRC_LENGTH_CUTOFF\n\n                        Default: 1000 -- Minimum length of contigs to be\n\n                        checked for circularity. Bare minimun is 1000 nts\n\n  --minimum_length_linear LINEAR_LENGTH_CUTOFF\n\n                        Default: 1000 -- Minimum length of non-circualr\n\n                        contigs to be checked for viral hallmark genes.\n\n  -db VIRUS_DOMAIN_DB, --virus_domain_db VIRUS_DOMAIN_DB\n\n                        default: virion -- 'standard' database: all virus (DNA\n\n                        and RNA) hallmark genes (i.e. genes with known\n\n                        function as virion structural, packaging, replication,\n\n                        or maturation proteins specifically encoded by virus\n\n                        genomes) with low false discovery rate. 'virion'\n\n                        database: subset of 'standard', hallmark genes\n\n                        encoding virion structural proteins, packaging\n\n                        proteins, or capsid maturation proteins (DNA and RNA\n\n                        genomes) with LOWEST false discovery rate. 'rna_virus'\n\n                        database: For RNA virus hallmarks only. Includes RdRp\n\n                        and capsid genes of RNA viruses. Low false discovery\n\n                        rate.\n\n  --lin_minimum_hallmark_genes LIN_MINIMUM_DOMAINS\n\n                        Default: 1 -- Number of detected viral hallmark genes\n\n                        on a non-circular contig to be considered viral and\n\n                        recieve full annotation. WARNING: Only choose '0' if\n\n                        you have prefiltered the contig file to only contain\n\n                        putative viral contigs (using another method such as\n\n                        VirSorter or DeepVirFinder), or you are very confident\n\n                        you have physically enriched for virus particles very\n\n                        well (you might check with ViromeQC). Otherwise, the\n\n                        duration of the run will be extended many many times\n\n                        over, largely annotating non-viral contigs, which is\n\n                        not what Cenote-Taker2 is meant for. For unenriched\n\n                        samples, '2' might be more suitable, yielding a false\n\n                        positive rate near 0.\n\n  --circ_minimum_hallmark_genes CIRC_MINIMUM_DOMAINS\n\n                        Default:1 -- Number of detected viral hallmark genes\n\n                        on a circular contig to be considered viral and\n\n                        recieve full annotation. For samples physically\n\n                        enriched for virus particles, '0' can be used, but\n\n                        please treat circular contigs without known viral\n\n                        domains cautiously. For unenriched samples, '1' might\n\n                        be more suitable.\n\n  --known_strains HANDLE_KNOWNS\n\n                        Default: do_not_check_knowns -- do not check if\n\n                        putatively viral contigs are highly related to known\n\n                        sequences (via MEGABLAST). 'blast_knowns': REQUIRES '\n\n                        --blastn_db' option to function correctly.\n\n  --blastn_db BLASTN_DB\n\n                        Default: none -- Set a database if using '--\n\n                        known_strains' option. Specify BLAST-formatted\n\n                        nucleotide datase. Probably, use only GenBank 'nt'\n\n                        database downloaded from ftp://ftp.ncbi.nlm.nih.gov/\n\n                        or another GenBank formatted .fasta file to make\n\n                        databse\n\n  --enforce_start_codon ENFORCE_START_CODON\n\n                        Default: False -- For final genome maps, require ORFs\n\n                        to be initiated by a typical start codon? GenBank\n\n                        submissions containing ORFs without start codons can\n\n                        be rejected. However, if True, important but\n\n                        incomplete genes could be culled from the final\n\n                        output. This is relevant mainly to contigs of\n\n                        incomplete genomes\n\n  -hh HHSUITE_TOOL, --hhsuite_tool HHSUITE_TOOL\n\n                        default: hhblits -- hhblits will query PDB, pfam, and\n\n                        CDD to annotate ORFs escaping identification via\n\n                        upstream methods. 'hhsearch': hhsearch, a more\n\n                        sensitive tool, will query PDB, pfam, and CDD to\n\n                        annotate ORFs escaping identification via upstream\n\n                        methods. (WARNING: hhsearch takes much, much longer\n\n                        than hhblits and can extend the duration of the run\n\n                        many times over. Do not use on large input contig\n\n                        files). 'no_hhsuite_tool': forgoes annotation of ORFs\n\n                        with hhsuite. Fastest way to complete a run.\n\n  --crispr_file CRISPR_FILE\n\n                        Tab-separated file with CRISPR hits in the following\n\n                        format: CONTIG_NAME HOST_NAME NUMBER_OF_MATCHES. You\n\n                        could use this tool:\n\n                        https://github.com/edzuf/CrisprOpenDB. Then reformat\n\n                        for Cenote-Taker 2\n\n  --isolation_source ISOLATION_SOURCE\n\n                        Default: unknown -- Describes the local geographical\n\n                        source of the organism from which the sequence was\n\n                        derived\n\n  --Environmental_sample ENVIRONMENTAL_SAMPLE\n\n                        Default: False -- True or False, Identifies sequence\n\n                        derived by direct molecular isolation from an\n\n                        unidentified organism\n\n  --collection_date COLLECTION_DATE\n\n                        Default: unknown -- Date of collection. this format:\n\n                        01-Jan-2019, i.e. DD-Mmm-YYYY\n\n  --metagenome_type METAGENOME_TYPE\n\n                        Default: unknown -- a.k.a. metagenome_source\n\n  --srr_number SRR_NUMBER\n\n                        Default: unknown -- For read data on SRA, run number,\n\n                        usually beginning with 'SRR' or 'ERR'\n\n  --srx_number SRX_NUMBER\n\n                        Default: unknown -- For read data on SRA, experiment\n\n                        number, usually beginning with 'SRX' or 'ERX'\n\n  --biosample BIOSAMPLE\n\n                        Default: unknown -- For read data on SRA, sample\n\n                        number, usually beginning with 'SAMN' or 'SAMEA' or\n\n                        'SRS'\n\n  --bioproject BIOPROJECT\n\n                        Default: unknown -- For read data on SRA, project\n\n                        number, usually beginning with 'PRJNA' or 'PRJEB'\n\n  --assembler ASSEMBLER\n\n                        Default: unknown_assembler -- Assembler used to\n\n                        generate contigs, if applicable. Specify version of\n\n                        assembler software, if possible.\n\n  --molecule_type MOLECULE_TYPE\n\n                        Default: DNA -- viable options are DNA - OR - RNA\n\n  --data_source DATA_SOURCE\n\n                        default: original -- original data is not taken from\n\n                        other researchers' public or private database.\n\n                        'tpa_assembly': data is taken from other researchers'\n\n                        public or private database. Please be sure to specify\n\n                        SRA metadata.\n\n  --filter_out_plasmids FILTER_PLASMIDS\n\n                        Default: True -- True - OR - False. If True, hallmark\n\n                        genes of plasmids will not count toward the minimum\n\n                        hallmark gene parameters. If False, hallmark genes of\n\n                        plasmids will count. Plasmid hallmark gene set is not\n\n                        necessarily comprehensive at this time.\n\n  --scratch_directory SCRATCH_DIR\n\n                        Default: none -- When running many instances of\n\n                        Cenote-Taker2, it seems to run more quickly if you\n\n                        copy the hhsuite databases to a scratch space\n\n                        temporarily. Use this argument to set a scratch\n\n                        directory that the databases will be copied to (at\n\n                        least 100GB of scratch space are required for copying\n\n                        the databases)\n\n  --blastp BLASTP       Do not use this argument as of now.\n\n  --orf-within-orf ORF_WITHIN\n\n                        Default: False -- Remove called ORFs without HMMSCAN\n\n                        or RPS-BLAST hits that begin and end within other\n\n                        ORFs? True or False\n\n  --cenote-dbs CENOTE_DBS\n\n                        Default: cenote_script_path -- If you downloaded and\n\n                        setup the databases in a non-standard location,\n\n                        specify path\n\n  --wrap WRAP           Default: True -- Wrap/rotate DTR/circular contigs so\n\n                        the start codon of an ORF is the first nucleotide in\n\n                        the contig/genome\n\n  --hallmark_taxonomy HALLMARK_TAX\n\n                        Default: False -- Get hierarchical taxonomy\n\n                        information for all hallmark genes? This report\n\n                        (*.hallmarks.taxonomy.out) is not considered in the\n\n                        final taxonomy call.\n```\n## Directory Tree\n![Directory Tree Image](../master/cenote-taker2_directory_tree2.png)\n\n\n## Citation\nMichael J Tisza, Anna K Belford, Guillermo Dom\u00ednguez-Huerta, Benjamin Bolduc, Christopher B Buck, Cenote-Taker 2 democratizes virus discovery and sequence annotation, Virus Evolution, Volume 7, Issue 1, January 2021, veaa100, https://doi.org/10.1093/ve/veaa100\n\n"
}