name: Citation Data Collection and Impact Data Generation (Authoritative)

on:
  # Run daily to continuously collect citation data
  schedule:
    # Run daily at 04:00 UTC
    - cron: "0 4 * * *"
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh of all citation data'
        required: false
        default: false
        type: boolean

# Permissions needed for creating changes
permissions:
  contents: write

jobs:
  collect-pubmed-citations:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install biopython beautifulsoup4 matplotlib requests networkx
      
      - name: Collect PubMed citation data
        id: collect
        env:
          NCBI_API_KEY: ${{ secrets.NCBI_API_KEY }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL || 'github-action@example.com' }}
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # Create output directory for reports
          mkdir -p reports/citations
          
          # Run PubMed collection script
          python scripts/pubmed_citations.py \
            --api-key "$NCBI_API_KEY" \
            --email "$CONTACT_EMAIL" \
            ${{ inputs.force_refresh == 'true' && '--force-refresh' || '' }}
          
          # Generate citation reports
          python scripts/citation_report.py
      
      - name: Update impact_data.json with real citation data (AUTHORITATIVE SOURCE)
        run: |
          # This is the authoritative script for generating impact_data.json
          # It uses only real citation data with no synthetic generation
          python scripts/comprehensive_citation_data.py
      
      - name: Commit changes directly to main
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add all relevant files
          git add metadata/ reports/ impact_data.json
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update citation data from PubMed and generate reports [skip ci]"
            git push
            echo "Citation data updated successfully"
          fi